- name: display pre database software install message
  remote_user: "{{ root_user }}"
  debug:
    msg:
      - 'Oracle Database Software 19c Installation started for Single Instance at {{ansible_date_time.iso8601}}:'

- name: add groups for oracle
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  become: yes
  group:
    name: "{{ item }}"
    state: present
  loop:
  - dba
  - oinstall
  - oper

- name: Add the oracle user
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  become: yes
  user:
    name: oracle
    state: present
    groups:
    - dba
    - oinstall
    - oper

- name: create required directories
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  become: yes
  file:
    path="{{ item }}"
    state=directory
    owner="{{ oracle_user }}"
    group="{{ oracle_install_group }}"
    mode=0775
  with_items:
    - "{{ root_directory }}"
    - "{{ scripts_directory }}"
    - "{{ oracle_inventory }}"
    - "{{ oracle_base }}"
    - "{{ stage_dir }}"
    - "{{ oracle_home }}"
  tags:
   - db19c_createinventory

- name: Copy preinstall-19c package to target database server
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ oracle_user }}"
  # become_user: "{{ oracle_user }}"
  become: yes
  copy: src=roles/without_cp_bin/files/{{ item }} dest={{ stage_dir }} mode=0755 owner="{{ oracle_user }}" group="{{ oracle_install_group }}"
  with_items:
     - oracle-database-preinstall-19c-1.0-1.el7.src.rpm
  tags:
   - db19c_preinstpkg

- name: Install the preinstall RPM
   when: inventory_hostname in groups['dbservers']
   remote_user: "{{ root_user }}"
   become: yes
   # command: rpm -U "/{{ stage_dir }}/{{ preinstall_pkg }}"
   yum:
     name: "{{ stage_dir }}/oracle-database-preinstall-19c-1.0-1.el7.x86_64.rpm"
   tags:
    - db19c_preinstpkg

# - name: Execute rpm package 
  # when: inventory_hostname in groups['dbservers']
  # remote_user: "{{ root_user }}"
  # become: yes
  # command: rpm -U "/{{ stage_dir }}/{{ preinstall_pkg }}"
  # args:
    # warn: false
  # register: db19c_prerpm_install
  # tags:
   # - db19c_preinstpkg

- name: Setup Oracle 19c Database Software silent response file
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  become_user: "{{ oracle_user }}"
  become: yes
  template: src=roles/without_cp_bin/templates/{{ oradbsoft_rsp }}.rsp.j2 dest={{ stage_dir }}/{{ oradbsoft_rsp }}.rsp mode=0755
  tags:
   - db19c_setuprspfile

- name: Setup Oracle 19c Database Software silent response file - Creating DB script
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  become_user: "{{ oracle_user }}"
  become: yes
  template: src=roles/without_cp_bin/templates/{{ dbca_rsp }}.rsp.j2 dest={{ oracle_base }}/{{ dbca_rsp }}.rsp mode=0755
  tags:
   - db19c_setuprspfile

- name: Copy create databas shell script
  when: inventory_hostname in groups['dbservers']
  become_user: "{{ oracle_user }}"
  become: yes
  template: src=roles/without_cp_bin/templates/{{ create_db }}.sh.j2 dest={{ oracle_base }}/{{ create_db }}.sh mode=0755
  tags:
   - db19c_createDB

- name: Install Oracle 19c Database Software
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  become_user: "{{ oracle_user }}"
  become: yes
  shell: "{{ oracle_home }}/runInstaller -silent -force -waitforcompletion -responseFile {{ stage_dir }}/{{ oradbsoft_rsp }}.rsp -noconfig -ignorePrereqFailure"
  ignore_errors: True
  tags:
   - dbsoft19c_install

- name: Execute orainstroot.sh
  when: inventory_hostname in groups['dbservers'] 
  remote_user: "{{ root_user }}"
  become: yes
  shell: "{{ oracle_inventory }}/orainstRoot.sh" 
  ignore_errors: True
  tags:
   - db19c_exeorainstroot

- name: Execute root.sh
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  become: yes
  shell: "{{ oracle_home }}/root.sh -silent"
  tags:
   - db19c_exeroot

- name: Create database
  when: inventory_hostname in groups['dbservers']
  # remote_user: "{{ root_user }}"
  become_user: "{{ oracle_user }}"
  become: yes
  shell: "{{ oracle_base }}/createDB.sh"
  ignore_errors: True
  tags:
  - db19c_create

- name: Remove stage directory 
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ oracle_user }}"
  become: yes
  file: path={{ stage_dir }} state=absent

- name: display post install message
  debug:
    msg:
      - 'This Steps completed below task for Single Instance at {{ansible_date_time.iso8601}}:'
      - '- Install Single Instance Oracle Database Software'
      - 'Next Steps left to do:'
      - '- Create SI empty Container Database on server ora-x1'
      - '- Create SI Pluggable Database on server ora-x1'
      - '- Deinstall Single Instance Oracle Database Software'
      - '- END OF ALL: git clone of OracleDBAwithAnsible repository will be shared'
